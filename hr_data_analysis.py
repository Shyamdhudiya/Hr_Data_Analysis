# -*- coding: utf-8 -*-
"""HR_Data_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V0N3jGuc6RJCtI9-hdo5iFwSfdB3wsR8
"""

# import necessary Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

"""Load Dataset"""

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('HR Data.csv')

df.head(5)

"""Initial Inspection"""

print("Original Shape:", df.shape)
print("\nColumns:\n", df.columns.tolist())
print("\nMissing Values:\n", df.isnull().sum())
print("\nDuplicates:", df.duplicated().sum())

"""Drop Unnecessary Columns"""

columns_to_drop = ['EmployeeCount', 'EmployeeNumber', 'Over18', 'StandardHours']
df_cleaned = df.drop(columns=columns_to_drop, inplace=True)

"""Rename Columns"""

columns_to_drop = ['EmployeeCount', 'Over18', 'StandardHours', 'EmployeeNumber']
df_cleaned = df.drop(columns=[col for col in columns_to_drop if col in df.columns])

"""Clean String Columns"""

for col in df_cleaned.select_dtypes(include='object').columns:
    df_cleaned[col] = df_cleaned[col].str.strip()

"""Final DataSet Info"""

print("\nCleaned shape:", df_cleaned.shape)
print("\nCleaned columns:\n", df_cleaned.columns.tolist())
print("\nSample Data:\n", df_cleaned.head())

"""Save Cleand Data"""

df_cleaned.to_csv('HR_Data_Cleaned.csv', index=False)
print("\nâœ… Cleaned data saved as 'HR_Data_Cleaned.csv'")

"""Visualization"""

# Attririon Count Plot
plt.figure(figsize=(8, 6))
sns.countplot(data=df_cleaned, x='Attrition', palette='Set2')
plt.title('Attrition Count')
plt.xlabel('Attrition')
plt.ylabel('Count')
plt.show()

# Attrition by Department
plt.figure(figsize=(12, 6))
sns.countplot(data=df_cleaned, x='Department', hue='Attrition', palette='Set2')
plt.title('Attrition by Department')
plt.xlabel('Department')

# Monthly Income Distribution
plt.figure(figsize=(8, 6))
sns.histplot(data=df_cleaned, x='MonthlyIncome', kde=True, color='skyblue')
plt.title('Monthly Income Distribution')
plt.xlabel('Monthly Income')

# Box Plot: Monthly Income vs Job Role
plt.figure(figsize=(18, 10))
sns.boxplot(data=df_cleaned, x='JobRole', y='MonthlyIncome', palette='Set2')
plt.title('Monthly Income vs Job Role')
plt.xlabel('Job Role')
plt

# heatmap: Correlation between Numeric Features
plt.figure(figsize=(12,8))
sns.heatmap(df_cleaned.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

# Attririon by Gender
plt.figure(figsize=(8, 6))
sns.countplot(data=df_cleaned, x='Gender', hue='Attrition', palette='Set2')
plt.title('Attrition by Gender')
plt.xlabel('Gender')

# Job Satisfaction VS Attrition
plt.figure(figsize=(8, 6))
sns.countplot(data=df_cleaned, x='JobSatisfaction', hue='Attrition', palette='Set2')
plt.title('Job Satisfaction vs Attrition')
plt.xlabel('Job Satisfaction')

